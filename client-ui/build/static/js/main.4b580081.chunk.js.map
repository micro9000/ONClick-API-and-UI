{"version":3,"sources":["components/Navigator.js","components/Header.js","components/Users.js","components/ProjectList.js","components/Project/Overview.js","components/Project/Activity.js","components/Project/Issues.js","components/Project/NewIssue.js","components/Project/Gantt.js","components/Project/Calendar.js","components/Project/News.js","components/Project/Documents.js","components/Project/Wiki.js","components/Project/Files.js","components/Project/Settings.js","components/Project/index.js","components/Routers.js","components/Paperbase.js","App.js","serviceWorker.js","index.js"],"names":["categories","id","children","icon","to","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","ListItemText","primary","map","Fragment","key","childId","button","component","Link","Divider","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","borderColor","onDrawerToggle","AppBar","position","elevation","Toolbar","Grid","container","alignItems","Hidden","smUp","IconButton","aria-label","onClick","xs","href","Tooltip","title","Avatar","src","alt","Typography","text","Button","size","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","typography","block","display","addUser","contentWrapper","main","Paper","TextField","fullWidth","placeholder","InputProps","disableUnderline","align","ProjectList","Overview","Activity","Issues","NewIssue","Gantt","Calendar","News","Documents","Wiki","Files","Settings","TabPanel","value","index","role","hidden","aria-labelledby","Box","p","a11yProps","Project","React","useState","setValue","Tabs","onChange","event","newValue","textColor","Tab","label","Routers","exact","path","Copyright","Date","getFullYear","createMuiTheme","light","dark","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","root","indicator","height","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","drawer","flexShrink","app","flex","flexDirection","background","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","style","open","onClose","xsDown","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b580081.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst categories = [\r\n    {\r\n        id: 'Develop',\r\n        children: [\r\n            { id: 'Projects', icon: <PeopleIcon />, to: '/', active: true },\r\n            { id: 'New Project', icon: <DnsRoundedIcon />, to: '/new-project' },\r\n            { id: 'Calendar', icon: <PermMediaOutlinedIcon />, to: '/calendar' },\r\n            { id: 'Project Status', icon: <PublicIcon />, to: '/project-statuses' },\r\n            { id: 'Issues', icon: <SettingsEthernetIcon />, to: '/issues' },\r\n            { id: 'ML Kit', icon: <SettingsInputComponentIcon />, to: '/test' }\r\n        ]\r\n    },\r\n    {\r\n        id: 'Administrator',\r\n        children: [\r\n            { id: 'Users', icon: <PeopleIcon />, to: '/users', active: true },\r\n            { id: 'Groups', icon: <DnsRoundedIcon />, to: '/groups' }\r\n        ]\r\n    },\r\n    {\r\n        id: 'Quality',\r\n        children: [\r\n            { id: 'Analytics', icon: <SettingsIcon />, to: '/analytics' },\r\n            { id: 'Performance', icon: <TimerIcon />, to: '/performance' },\r\n            { id: 'Test Lab', icon: <PhonelinkSetupIcon />, to: '/test-lab' }\r\n        ]\r\n    }\r\n];\r\n\r\n// categories.map(({ id, children }) => {\r\n//     children.map(item => {\r\n//         if (item.id === 'Calendar') {\r\n//             item.active = true;\r\n//         }\r\n//     });\r\n// });\r\n\r\nconst styles = theme => ({\r\n    categoryHeader: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    categoryHeaderPrimary: {\r\n        color: theme.palette.common.white\r\n    },\r\n    item: {\r\n        paddingTop: 1,\r\n        paddingBottom: 1,\r\n        color: 'rgba(255, 255, 255, 0.7)',\r\n        '&:hover,&:focus': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.08)'\r\n        }\r\n    },\r\n    itemCategory: {\r\n        backgroundColor: '#232f3e',\r\n        boxShadow: '0 -1px 0 #404854 inset',\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2)\r\n    },\r\n    firebase: {\r\n        fontSize: 24,\r\n        color: theme.palette.common.white\r\n    },\r\n    itemActiveItem: {\r\n        color: '#4fc3f7'\r\n    },\r\n    itemPrimary: {\r\n        fontSize: 'inherit'\r\n    },\r\n    itemIcon: {\r\n        minWidth: 'auto',\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n});\r\n\r\nfunction Navigator(props) {\r\n    const { classes, ...other } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <Drawer variant=\"permanent\" {...other}>\r\n                <List disablePadding>\r\n                    <ListItem\r\n                        className={clsx(classes.firebase, classes.item, classes.itemCategory)}\r\n                    >\r\n                        ONClick\r\n                    </ListItem>\r\n                    <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n                        <ListItemIcon className={classes.itemIcon}>\r\n                            <HomeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            classes={{\r\n                                primary: classes.itemPrimary\r\n                            }}\r\n                        >\r\n                            Home\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    {categories.map(({ id, children }) => (\r\n                        <React.Fragment key={id}>\r\n                            <ListItem className={classes.categoryHeader}>\r\n                                <ListItemText\r\n                                    classes={{\r\n                                        primary: classes.categoryHeaderPrimary\r\n                                    }}\r\n                                >\r\n                                    {id}\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            {children.map(({ id: childId, icon, active, to }) => (\r\n                                <ListItem\r\n                                    key={childId}\r\n                                    button\r\n                                    className={clsx(classes.item, active && classes.itemActiveItem)}\r\n                                    component={Link}\r\n                                    to={to}\r\n                                >\r\n                                    <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                                    <ListItemText\r\n                                        classes={{\r\n                                            primary: classes.itemPrimary\r\n                                        }}\r\n                                    >\r\n                                        {childId}\r\n                                    </ListItemText>\r\n                                </ListItem>\r\n                            ))}\r\n\r\n                            <Divider className={classes.divider} />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nNavigator.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n    secondaryBar: {\r\n        zIndex: 0\r\n    },\r\n    menuButton: {\r\n        marginLeft: -theme.spacing(1)\r\n    },\r\n    iconButtonAvatar: {\r\n        padding: 4\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: lightColor,\r\n        '&:hover': {\r\n            color: theme.palette.common.white\r\n        }\r\n    },\r\n    button: {\r\n        borderColor: lightColor\r\n    }\r\n});\r\n\r\nfunction Header(props) {\r\n    const { classes, onDrawerToggle } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n                <Toolbar>\r\n                    <Grid container spacing={1} alignItems=\"center\">\r\n                        <Hidden smUp>\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={onDrawerToggle}\r\n                                    className={classes.menuButton}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Grid item xs />\r\n                        <Grid item>\r\n                            <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                                Go to docs\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Alerts • No alerts\">\r\n                                <IconButton color=\"inherit\">\r\n                                    <NotificationsIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                className={classes.secondaryBar}\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n            >\r\n                <Toolbar>\r\n                    <Grid container alignItems=\"center\" spacing={1}>\r\n                        <Grid item xs>\r\n                            <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                                {props.text}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"outlined\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                            >\r\n                                Web setup\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Help\">\r\n                                <IconButton color=\"inherit\">\r\n                                    <HelpIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <AppBar\r\n                component=\"div\"\r\n                className={classes.secondaryBar}\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                elevation={0}\r\n            >\r\n                {props.children}\r\n            </AppBar>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onDrawerToggle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport Header from './Header';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        maxWidth: 936,\r\n        margin: 'auto',\r\n        overflow: 'hidden'\r\n    },\r\n    searchBar: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize\r\n    },\r\n    block: {\r\n        display: 'block'\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    contentWrapper: {\r\n        margin: '40px 16px'\r\n    }\r\n});\r\n\r\nfunction Users({ classes, onDrawerToggle }) {\r\n    return (\r\n        <Fragment>\r\n            <Header onDrawerToggle={onDrawerToggle} text=\"Your Projects\" />\r\n            <main className={classes.main}>\r\n                <Paper className={classes.paper}>\r\n                    <AppBar\r\n                        className={classes.searchBar}\r\n                        position=\"static\"\r\n                        color=\"default\"\r\n                        elevation={0}\r\n                    >\r\n                        <Toolbar>\r\n                            <Grid container spacing={2} alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <SearchIcon className={classes.block} color=\"inherit\" />\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder=\"Search by email address, phone number, or user UID\"\r\n                                        InputProps={{\r\n                                            disableUnderline: true,\r\n                                            className: classes.searchInput\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.addUser}\r\n                                    >\r\n                                        Add user\r\n                                    </Button>\r\n                                    <Tooltip title=\"Reload\">\r\n                                        <IconButton>\r\n                                            <RefreshIcon\r\n                                                className={classes.block}\r\n                                                color=\"inherit\"\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div className={classes.contentWrapper}>\r\n                        <Typography color=\"textSecondary\" align=\"center\">\r\n                            No users for this project yet\r\n                        </Typography>\r\n                    </div>\r\n                </Paper>\r\n            </main>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nUsers.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Users);\r\n","import React, { Fragment } from 'react';\r\nimport Header from './Header';\r\n\r\nexport default function ProjectList({ classes, onDrawerToggle }) {\r\n    return (\r\n        <Fragment>\r\n            <Header onDrawerToggle={onDrawerToggle} text=\"Your Projects\" />\r\n            <main className={classes.main}>\r\n                <h1>Projects</h1>\r\n            </main>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Overview() {\r\n    return <div>Project Overview</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Activity() {\r\n    return <div>Activity</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Issues() {\r\n    return <div>Issues</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NewIssue() {\r\n    return <div>New Issue</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Gantt() {\r\n    return <div>Gantt</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Calendar() {\r\n    return <div>Calendar</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function News() {\r\n    return <div>News</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Documents() {\r\n    return <div>Documents</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Wiki() {\r\n    return <div>Wiki</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Files() {\r\n    return <div>Files</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Settings() {\r\n    return <div>Settings</div>;\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Header from '../Header';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport Overview from './Overview';\r\nimport Activity from './Activity';\r\nimport Issues from './Issues';\r\nimport NewIssue from './NewIssue';\r\nimport Gantt from './Gantt';\r\nimport Calendar from './Calendar';\r\nimport News from './News';\r\nimport Documents from './Documents';\r\nimport Wiki from './Wiki';\r\nimport Files from './Files';\r\nimport Settings from './Settings';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\nexport default function Project({ classes, onDrawerToggle }) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header onDrawerToggle={onDrawerToggle} text=\"Project title here\">\r\n                <Tabs value={value} onChange={handleChange} textColor=\"inherit\">\r\n                    <Tab textColor=\"inherit\" {...a11yProps(0)} label=\"Overview\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(1)} label=\"Activity\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(2)} label=\"Issues\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(3)} label=\"New Issue\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(4)} label=\"Gantt\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(5)} label=\"Calendar\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(6)} label=\"News\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(7)} label=\"Documents\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(8)} label=\"Wiki\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(9)} label=\"Files\" />\r\n                    <Tab textColor=\"inherit\" {...a11yProps(10)} label=\"Settings\" />\r\n                </Tabs>\r\n            </Header>\r\n            <main className={classes.main}>\r\n                <TabPanel value={value} index={0}>\r\n                    <Overview />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Activity />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <Issues />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    <NewIssue />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                    <Gantt />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5}>\r\n                    <Calendar />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={6}>\r\n                    <News />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={7}>\r\n                    <Documents />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={8}>\r\n                    <Wiki />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={9}>\r\n                    <Files />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={10}>\r\n                    <Settings />\r\n                </TabPanel>\r\n            </main>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Users from './Users';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Projects from './ProjectList';\r\nimport Project from './Project/index';\r\n\r\nexport default function Routers({ classes, onDrawerToggle }) {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Projects classes={classes} onDrawerToggle={onDrawerToggle} />\r\n            </Route>\r\n            <Route exact path=\"/project\">\r\n                <Project classes={classes} onDrawerToggle={onDrawerToggle} />\r\n            </Route>\r\n            <Route path=\"/users\">\r\n                <Users classes={classes} onDrawerToggle={onDrawerToggle} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './Navigator';\r\n\r\nimport Routers from './Routers';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                ONClick\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#63ccff',\r\n            main: '#009be5',\r\n            dark: '#006db3'\r\n        }\r\n    },\r\n    typography: {\r\n        h5: {\r\n            fontWeight: 500,\r\n            fontSize: 26,\r\n            letterSpacing: 0.5\r\n        }\r\n    },\r\n    shape: {\r\n        borderRadius: 8\r\n    },\r\n    props: {\r\n        MuiTab: {\r\n            disableRipple: true\r\n        }\r\n    },\r\n    mixins: {\r\n        toolbar: {\r\n            minHeight: 48\r\n        }\r\n    }\r\n});\r\n\r\ntheme = {\r\n    ...theme,\r\n    overrides: {\r\n        MuiDrawer: {\r\n            paper: {\r\n                backgroundColor: '#18202c'\r\n            }\r\n        },\r\n        MuiButton: {\r\n            label: {\r\n                textTransform: 'none'\r\n            },\r\n            contained: {\r\n                boxShadow: 'none',\r\n                '&:active': {\r\n                    boxShadow: 'none'\r\n                }\r\n            }\r\n        },\r\n        MuiTabs: {\r\n            root: {\r\n                marginLeft: theme.spacing(1)\r\n            },\r\n            indicator: {\r\n                height: 3,\r\n                borderTopLeftRadius: 3,\r\n                borderTopRightRadius: 3,\r\n                backgroundColor: theme.palette.common.white\r\n            }\r\n        },\r\n        MuiTab: {\r\n            root: {\r\n                textTransform: 'none',\r\n                margin: '0 16px',\r\n                minWidth: 0,\r\n                padding: 0,\r\n                [theme.breakpoints.up('md')]: {\r\n                    padding: 0,\r\n                    minWidth: 0\r\n                }\r\n            }\r\n        },\r\n        MuiIconButton: {\r\n            root: {\r\n                padding: theme.spacing(1)\r\n            }\r\n        },\r\n        MuiTooltip: {\r\n            tooltip: {\r\n                borderRadius: 4\r\n            }\r\n        },\r\n        MuiDivider: {\r\n            root: {\r\n                backgroundColor: '#404854'\r\n            }\r\n        },\r\n        MuiListItemText: {\r\n            primary: {\r\n                fontWeight: theme.typography.fontWeightMedium\r\n            }\r\n        },\r\n        MuiListItemIcon: {\r\n            root: {\r\n                color: 'inherit',\r\n                marginRight: 0,\r\n                '& svg': {\r\n                    fontSize: 20\r\n                }\r\n            }\r\n        },\r\n        MuiAvatar: {\r\n            root: {\r\n                width: 32,\r\n                height: 32\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        minHeight: '100vh'\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    app: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: theme.spacing(6, 4),\r\n        background: '#eaeff1'\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n        background: '#eaeff1'\r\n    }\r\n};\r\n\r\nfunction Paperbase(props) {\r\n    const { classes } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <nav className={classes.drawer}>\r\n                    <Hidden smUp implementation=\"js\">\r\n                        <Navigator\r\n                            PaperProps={{ style: { width: drawerWidth } }}\r\n                            variant=\"temporary\"\r\n                            open={mobileOpen}\r\n                            onClose={handleDrawerToggle}\r\n                        />\r\n                    </Hidden>\r\n                    <Hidden xsDown implementation=\"css\">\r\n                        <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n                    </Hidden>\r\n                </nav>\r\n                <div className={classes.app}>\r\n                    <Routers classes={classes} onDrawerToggle={handleDrawerToggle} />\r\n                    <footer className={classes.footer}>\r\n                        <Copyright />\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nPaperbase.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);\r\n","import React, { Fragment } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paperbase from './components/Paperbase';\n\nfunction App() {\n    return (\n        <Fragment>\n            <CssBaseline />\n            <Paperbase />\n        </Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}